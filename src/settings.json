{
  "menu": [
    { "label": "IDE", "url": "http://localhost:3131/", "unique": true },
    { "label": "Browser", "url": "http://localhost:8080/.explorer.html", "unique": true },
    { "label": "Console", "url": "http://admin:admin@localhost:8080/system/console", "unique": true },
    { "separator": true },
    { "label": "Ripple Emulator", "url": "modules/ripple/index.html", "unique": true },
    { "separator": true },
    { "label": "Tail", "menu": [
      { "label": "Error", "url": "modules/log/error.html", "unique": true }
      { "label": "Request", "url": "modules/log/request.html", "unique": true }
    ]}
  ]
}

{
  "greetings":"Hello, World!",
  "multi" : ["first","second"],
  "translations" : { "en": "Hello", "zh": "你好" }
}

JCRUtils.postJSON = function postJSON(){

};

$.post(
  "/content/*",
  { ':nameHint': 'myNode', oneProperty: 'oneValue' },
  function(data){ alert(data); }
);

// form to json conversion *

(function($){
    $.fn.serializeObject = function(){

        var self = this,
            json = {},
            push_counters = {},
            patterns = {
                "validate": /^[a-zA-Z][a-zA-Z0-9_]*(?:\[(?:\d*|[a-zA-Z0-9_]+)\])*$/,
                "key":      /[a-zA-Z0-9_]+|(?=\[\])/g,
                "push":     /^$/,
                "fixed":    /^\d+$/,
                "named":    /^[a-zA-Z0-9_]+$/
            };


        this.build = function(base, key, value){
            base[key] = value;
            return base;
        };

        this.push_counter = function(key){
            if(push_counters[key] === undefined){
                push_counters[key] = 0;
            }
            return push_counters[key]++;
        };

        $.each($(this).serializeArray(), function(){

            // skip invalid keys
            if(!patterns.validate.test(this.name)){
                return;
            }

            var k,
                keys = this.name.match(patterns.key),
                merge = this.value,
                reverse_key = this.name;

            while((k = keys.pop()) !== undefined){

                // adjust reverse_key
                reverse_key = reverse_key.replace(new RegExp("\\[" + k + "\\]$"), '');

                // push
                if(k.match(patterns.push)){
                    merge = self.build([], self.push_counter(reverse_key), merge);
                }

                // fixed
                else if(k.match(patterns.fixed)){
                    merge = self.build([], k, merge);
                }

                // named
                else if(k.match(patterns.named)){
                    merge = self.build({}, k, merge);
                }
            }

            json = $.extend(true, json, merge);
        });

        return json;
    };
})(jQuery);

book/list.esp

link:
books/idididididid.list.html

book/detail.esp

link:
books/idididididid.detail.html

<div>
  <form method="POST">
    Title:<br/>
    <input type="text" name="title" style="width:100%"/>

    <br/>Text:<br/>
    <textarea style="width:100%" name="text"></textarea>

    <br/>
    <input type="submit" value="save"/>
    <input type="hidden" name=":redirect" value="*.html"/>

    <!-- used by Sling when decoding request parameters -->
    <input type="hidden" name="_charset_" value="UTF-8"/>
  </form>
  <!-- FILE UPDATE -->
</div>

<!-- code of step 2 comes here -->
<script>Sling.wizard();</script>

<ul>
    <li><em><a href="/content/blog/*.html">[Create new post]</a></em></li>
    <script>
      var posts = Sling.getContent("/content/blog", 2);
      for(var i in posts) {
        document.write("<li>"
          + "<a href='/content/blog/" + i + ".html'>"    
          + posts[i].title
          + "</a></li>");
      }
    </script>
</ul>

// config 
// - admin navigation
// - 

<ul>
    <li><em><a href="/content/blog/*.html">[Create new post]</a></em></li>
    <script>
      var posts = Sling.getContent("/content/launchbase/", 2);
      for(var i in posts) {
        document.write("<li>"
          + "<a href='/content/blog/" + i + ".html'>"    
          + posts[i].title
          + "</a></li>");
      }
    </script>
</ul>







greetings=Hello, World!
multi=first
multi=second
translations/en=Hello
translations/zh/你好

GET.esp
<html>
  <head><title></title></head>
  <body>
    <h1><%= currentNode.greetings %></h1>
  </body>
</html>

curl -X MKCOL http://admin:admin@gandalf.local:8080/apps/greeting
curl -T GET.esp http://admin:admin@localhost:8080/apps/greeting/GET.esp

curl F"sling:resourceType=greeting" -F"greetings=Hello, World" -F"translations/en=Hello" -F"translations/es=hola" http://admin:admin@localhost:8080/content/greet